<?php
/**********************************************************************************
 * Author: 	Kiner Shah
 * Date: 	26-Jan-2018
 **********************************************************************************/
	session_start();
	error_reporting(E_ERROR | E_PARSE);


	date_default_timezone_set('India/Mumbai');
	$date = date('Y-m-d');
	require('fpdf.php');
	$pdf = new FPDF('P', 'pt', 'A3');
	$pdf->AddPage();
	$pdf->SetFont('Arial', 'I', 9);
	$pdf->Cell(100, 20, 'This document was generated by DailyExpenseCalculator.', 0, 0, 'L', false);
	$pdf->SetFont('Arial', 'B', 12);
	$pdf->Ln();
	$pdf->Cell(100, 20, 'Date: '.$date, 0, 1, 'L', false);


	$tableObj = $_POST["generatePDF"];
	$tableObj = explode(',', $tableObj);
	$balanceObj = $_POST["generatePDFData"];
	if(isset($tableObj)) {
		$res_array = array("result" => true);
		//echo $res_array['result']."is ".$tableObj[0];
	}
	//print_r($res_array);
	$pdf->Ln();
	$count = 0;
	foreach($tableObj as $t1) {
		if($count == 0 || $count == 1) {
			$pdf->SetFont('Arial', 'B', 16);
		}
		else {
			$pdf->SetFont('Arial', '', 16);
		}
		if($count % 2 == 0) {
			$pdf->Ln();
			$pdf->Cell(100);
			$pdf->Cell(450, 50, $t1, 1, 0, 'C', false);
		}
		else {
			$pdf->Cell(150, 50, $t1, 1, 0, 'C', false);
		}
		$count = $count + 1;
	}
	$pdf->Ln();
	$pdf->Cell(300, 50, "Balance: ".$balanceObj, 0, 0, 'L', false);
	$url = 'pdf-'.$date.'.pdf';
	$pdf->Output('F', $url, true);
	ob_end_clean();
	echo json_encode(['url' => $url]);

	// Loading the XML file and updating data to it
	// Thanks to Syscall: https://stackoverflow.com/a/49207346/4688321
	// Question link: https://stackoverflow.com/questions/49207127/problems-in-generating-proper-xml-file-using-php
	$doc = new DOMDocument("1.0", "UTF-8");
	$doc->preserveWhiteSpace = false;
	$doc->formatOutput = true;
	$load_success = $doc->load('test'.date('Y').'.xml');
	if($load_success == false) {
		$monthlyTotalElement = $doc->createElement('monthlytotal', 0.0);
		$monthElement = $doc->createElement('month');
		$monthElement->setAttribute('month_no', (int) date('m'));
		$month = $doc->createElement('months');
		$monthElement->appendChild($monthlyTotalElement);
		$month->appendChild($monthElement);
		$doc->appendChild($month);
		$test1 = $doc->saveXML();
		$doc->save('test'.date('Y').'.xml');
		$load_success = $doc->load('test'.date('Y').'.xml');
	}
	if($load_success == true) {
		//echo true;
	}
	$months_tags = $doc->getElementsByTagName('months'); /// <<< CHANGE
	$months_tag = $months_tags[0]; /// <<< CHANGE
	// if (!$doc->documentElement) {
	// 	echo "NULL documentElement";
	// }
	$months = $doc->getElementsByTagName('month');
	$cur_month = (int) date('m');
	$cur_date = $date;
	$found_month = false;
	//echo "<p>Current date: ".$cur_date."</p>";
	//echo "<p>Current month: ".$cur_month."</p>";
	foreach($months as $month) {
		//echo "<p>Month START</p>";
		$month_no = (int) $month->getAttribute('month_no');
		//echo "<p>Month: ".$month_no."</p>";
		if($cur_month == $month_no) {
			//echo "<p>Found month</p>";
			$dailytotals = $month->getElementsByTagName('dailytotal');
			$found_date = false;
			// $oldDailyTotal = 0.0;
			foreach($dailytotals as $d) {
				$this_date = $d->getAttribute('date');
				//echo "<p>Date: ".$this_date."</p>";
				if($this_date === $cur_date) {
					// echo "<p>Found date</p>";
					// $oldDailyTotal = (float) $d->nodeValue;
					$new_dailytotal = $doc->createElement('dailytotal', (float) $balanceObj);
					$new_dailytotal->setAttribute('date', $date);
					$d->parentNode->replaceChild($new_dailytotal, $d);	// (new node, old node)
					$found_date = true;
					break;
				}
			}
			if($found_date == false) {	// entry on a new day
				//echo "<p>Didn't found date</p>";
				$newDailyTotal = $doc->createElement('dailytotal', (float) $balanceObj);
				$newDailyTotal->setAttribute('date', $date);
				$m = $month->getElementsByTagName('monthlytotal')->item(0);
				$newBalance = ((float) $m->nodeValue) + ((float) $balanceObj);
				$newMonthlyTotal = $doc->createElement('monthlytotal', (float) $newBalance);
				$m->parentNode->replaceChild($newMonthlyTotal, $m);
				$newDailyTotal = $month->appendChild($newDailyTotal);
			}
			else {						// entry on the same day
				$m = $month->getElementsByTagName('monthlytotal')->item(0);
				// $oldBalance = (float) $m->nodeValue;
				// $newBalance = $oldBalance - $oldDailyTotal + $balanceObj;
				$newBalance = ((float) $m->nodeValue) + ((float) $balanceObj);
				$newMonthlyTotal = $doc->createElement('monthlytotal', (float) $newBalance);
				$m->parentNode->replaceChild($newMonthlyTotal, $m);
			}
			$found_month = true;
			break;
		}
	}
	if($found_month == false) {
		// echo "<p>Didn't found month</p>";
		$newMonthElement = $doc->createElement('month');
		$newMonthElement->setAttribute('month_no', $cur_month);
		$newDailyTotalElement = $doc->createElement('dailytotal', (float) $balanceObj);
		$newDailyTotalElement->setAttribute('date', $date);
		$newMonthlyTotalElement = $doc->createElement('monthlytotal', (float) $balanceObj);
		$newDailyTotalElement = $newMonthElement->appendChild($newDailyTotalElement);
		$newMonthlyTotalElement = $newMonthElement->appendChild($newMonthlyTotalElement);
		$newMonthElement = $doc->appendChild($newMonthElement);
		$months_tag->appendChild($newMonthElement); /// <<< CHANGE
	}
	$test1 = $doc->saveXML();
	$doc->save('test'.date('Y').'.xml');
	//echo json_encode(true);
?>
